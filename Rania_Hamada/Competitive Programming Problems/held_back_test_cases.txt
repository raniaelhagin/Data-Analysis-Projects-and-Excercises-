H-Index
hIndex([3,3,5,5,6,1,9,7,0,4])  # Expected: 5
hIndex([3,3,5,5,6,1,9,7,0,4,8,9,8])  # Expected: 6

Rectangles Intersection
intersectingRectangles(rect1 = [[2,2],[6,7]], rect2 = [[1,3],[7,6]])  # Expected: True
intersectingRectangles(rect1 = [[6,2],[2,7]], rect2 = [[1,3],[7,6]])  # Expected: True
intersectingRectangles(rect1 = [[6,2],[2,7]], rect2 = [[1,1],[8,8]])  # Expected: True
intersectingRectangles(rect1 = [[6,2],[2,7]], rect2 = [[3,3],[5,6]])  # Expected: True
intersectingRectangles(rect1 = [[2,2],[6,7]], rect2 = [[1,10],[7,13]])  # Expected: False

Longest Peak
longestPeak([1, 2, 3, 3, 4, 4, -3, 2, 2, 5])  # Expected: 0  // no number surrounded by others that are strictly lower than itself
longestPeak([1, 2, 3, 3, 4, 4, -3, 2, 3, 0])  # Expected: 4  // -3, 2, 3, 0

Monotonic Array
isMonotonic([1,2,2,3,6,15,15,15,15,89])  # Expected: True
isMonotonic([-8, -100, -101, -99, -500])  # Expected: False
isMonotonic([7,7,7,7,7,7,7])  # Expected: True

Number of Ways to Select Buildings
numberOfWays('110011')  # Expected: 8
numberOfWays('1100110')  # Expected: 12

Perfect Squares
perfectSquares(64)  # Expected: 1
perfectSquares(78)  # Expected: 3  // 49 + 25 + 4
perfectSquares(80)  # Expected: 2  // 64 + 16
perfectSquares(121)  # Expected: 1
perfectSquares(9925)  # Expected: 2  // 95^2 + 30^2

Water the Trees
minimumDays([4,3,1])  # Expected: 3
minimumDays([5,4,1])  # Expected: 4
minimumDays([6,5,2])  # Expected: 4
minimumDays([5,2,6])  # Expected: 4
minimumDays([8,7,6,4,3])  # Expected: 8